#!/usr/bin/env python

Import("env")
Import("env_modules")

env_ffmpeg = env_modules.Clone()

# FIXMENM: TEMPORARY until webm completely out
# also requires libogg, libvorbis and libopus
if env["builtin_libogg"]:
    env_ffmpeg.Prepend(CPPPATH=["#thirdparty/libsimplewebm", "#/thirdparty/libvpx", "#/thirdparty/libsimplewebm/libwebm"])
#if env["builtin_libogg"]:
#        env_ffmpeg.Prepend(CPPPATH=["#thirdparty/libogg"])
#if env["builtin_libvorbis"]:
#    env_ffmpeg.Prepend(CPPPATH=["#thirdparty/libvorbis"])
#if env["builtin_opus"]:
#    env_ffmpeg.Prepend(CPPPATH=["#thirdparty/opus"])
#if env["builtin_libvpx"]:
#    env_ffmpeg.Prepend(CPPPATH=["#thirdparty/libvpx"])

# END FIXMENM

# Now you can copy the contents of the files.txt into this file.
# Thirdparty source files

thirdparty_obj = []
module_obj = []

# Godot source files

env_ffmpeg.add_source_files(module_obj, "*.cpp")
env.modules_sources += module_obj

# Needed to force rebuilding the module files when the thirdparty library is updated.
env.Depends(module_obj, thirdparty_obj)
